  
  name: "Build and Deploy"
  on:
    push:
      branches:
        -  Development 
  jobs:
     DEV_DEPLOY:
      runs-on: self-hosted
      name: login to stage-server
      steps:      
        - name: Checkout code
          uses: actions/checkout@v2
        - name: Notify on push
          env:
            CARD_TITLE: "Github-actions"
            CARD_SUBTITLE: "Deployment Started"
            JOB: "${{ github.event.repository.name }}"
            ENVIRONMENT: "${{ github.ref_name }}"
            BRANCH: "${{ github.ref_name }}"
            COMMITTED_BY: "${{ github.actor }}"
            COMMITTED_MESSAGE: "${{ github.event.head_commit.message }}"
          run: | 
             bash  /home/admin/sonarqube-test/start.sh "$CARD_TITLE" "$CARD_SUBTITLE" "$JOB" "$ENVIRONMENT" "$BRANCH" "$COMMITTED_BY" "$COMMITTED_MESSAGE"
             
        - name: Start Deployment
          run: |
            if [[ "Development" == "${{ github.ref_name }}" ]]
            then
              ls
              cd /home/admin/api/institute-node
              pwd
              git stash
              git pull
              /opt/sonar-scanner/bin/sonar-scanner -v
              echo "sanning SonarQube "
              /opt/sonar-scanner/bin/sonar-scanner \
             -Dsonar.projectKey=Admin-Node-Quality-Check \
             -Dsonar.sources=. \
             -Dsonar.host.url=https://sonar.testing.pluginlive.com \
             -Dsonar.login=sqp_b62143bffc8a50460f47fad9bb3fe9d44c632685 > sonar_scan.log 2>&1
              cat sonar_scan.log
              
            else 
              #APP=admin-node
              #ssh -o StrictHostKeyChecking=no admin@testing.pluginlive.com "cd /home/admin/api/$APP && git stash && git pull && source .env && npm i -f && npx prisma generate && npx prisma migrate deploy&& pm2 delete $APP && pm2 start \"npm start\" --name $APP"
              echo "**************************"
              echo "$APP DEPLOYED"
              echo "**************************"
            fi

        - name: Get Quality Gate status
          id: get_qg_status
          run: |
            qg_status=$(curl -s -u sqa_04d87e7a3a81659ab63228deecf56103bc44b2bf: 'https://sonar.testing.pluginlive.com/api/qualitygates/project_status?projectKey=Admin-Node-Quality-Check' | jq -r '.projectStatus.status')
            echo "QG_STATUS=$qg_status" >> $GITHUB_ENV

          env:
            CARD_TITLE: "Github-actions"
            CARD_SUBTITLE: "Deployment Completed"
            JOB: "Admin Node"
            ENVIRONMENT: "${{ github.ref_name }}"
            BRANCH: "${{ github.ref_name }}"
            COMMITTED_BY: "${{ github.actor }}"
            COMMITTED_MESSAGE: "${{ github.event.head_commit.message }}"   
    
        - name: Show Quality Gate Status
          run: |
            title="${{ env.CARD_TITLE }}"
            echo "$title"
            echo "Success"
            echo "Quality Gate Status: $QG_STATUS"
            Result=$QG_STATUS
            echo "$Result"

            if [[ "$Result" == "OK" ]];
            then
              echo "Deployment Started"
              #git stash
              #git pull
              #source .env
              #npm i -f
              #npx prisma generate
              #npx prisma migrate deploy
              #pm2 delete $APP
              #pm2 start "npm start" --name $APP
              bash  /home/admin/sonarqube-test/start.sh "$CARD_TITLE" "$CARD_SUBTITLE" "$JOB" "$ENVIRONMENT" "$BRANCH" "$COMMITTED_BY" "$COMMITTED_MESSAGE"

            else
              echo "Deployment Cancled Improve Your Code"
            fi

